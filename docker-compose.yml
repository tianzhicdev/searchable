services:
  frontend:
    build:
      context: ./frontend
      args:
        - REACT_APP_BRANDING=${REACT_APP_BRANDING}
    env_file:
      - frontend/silkroadonlightning.env
    volumes:
      - frontend_build:/app/build

  flask_api:
    container_name: flask_api
    restart: always
    env_file: 
      - ./api-server-flask/.env
      - ./api-server-flask/.secrets.env
    build:
      context: ./api-server-flask
      dockerfile: Dockerfile.api
    ports:
      - "5005:5005"
    networks:
      - db_network
      - web_network
    # deploy:
    #   resources:
    #     limits:
    #       cpus: "0.5"
    #       memory: 1GB
    #     reservations:
    #       cpus: "0.5"
    #       memory: 256M

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - frontend_build:/usr/share/nginx/html  # Frontend build
      - /root/.secrets/ssl/:/etc/nginx/ssl/   # SSL certificates
    ports:
      - "443:443"
    depends_on:
      - frontend
      - flask_api
  
  db:
    image: postgres
    restart: always
    env_file:
      - .env
    ports:
      - "5433:5432"
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web_network

volumes:
  frontend_build:  # Shared volume between frontend and nginx
  postgres_data:
  
networks:
  db_network:
    driver: bridge
  web_network:
    driver: bridge